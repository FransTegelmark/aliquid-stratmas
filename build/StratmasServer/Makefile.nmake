# $Id: Makefile.nmake,v 1.10 2006/08/29 17:18:42 dah Exp $
#
# When updating, make sure everything in here is compatible with
# Microsoft nmake. When changing compiler flags, try to use flags that
# works in both icl and cl.

# Uncomment to use Intel compiler
# STRATMASCOMPILER=icl

# Use Microsoft Visual C++ compiler by default. Note that make depend
# currently only works with the Intel compiler.
!IFNDEF STRATMASCOMPILER
STRATMASCOMPILER=cl
!ENDIF

CC=$(STRATMASCOMPILER)
CXX=$(STRATMASCOMPILER)
LD=$(STRATMASCOMPILER)

# Paths to dependencies, use defaults if not externaly specified.
!IFNDEF VCROOT
VCROOT="C:\Program\Microsoft Visual Studio 8\VC"
!ENDIF
!IFNDEF BOOSTROOT
BOOSTROOT=..\win\boost
!ENDIF
!IFNDEF XERCESCROOT
XERCESCROOT=..\win\xerces
!ENDIF

# General flags:
# /Zc:whcar_t- if unicode like char is native or not.
# /GR enable runtime type information (RTTI)
# /EHsc enable synchronus exceptions, also assume that extern
#       c-functions don't throw exceptions
# /W1 moderate amount of warnings.
# /nologo don't show compiler copyright notice for every invocation.
# /D__win__ enable Stratmas windows specialities.
# /DNOGDI preserves us from namespace pollution caused by window functions.
# /DXERCES_STATIC_LIBRARY /DXML_LIBRARY force xerces static build.
CXXFLAGS=/nologo /Zc:wchar_t- /GR /EHsc /W1 /DNOGDI /DXERCES_STATIC_LIBRARY /DXML_LIBRARY /D__win__ /I$(XERCESCROOT)\include /I$(BOOSTROOT) 
# WS2_32.lib WSock32.lib:  Windows Socket API (WinSocket.cpp)
# Advapi32.lib: Win. Events and Services (WinEventLog.cpp and optionsWin.cpp)
LDFLAGS=/nologo /Zc:wchar_t- /D__win__ /DNOGDI /DXERCES_STATIC_LIBRARY /DXML_LIBRARY WS2_32.lib WSock32.lib Advapi32.lib
SERVERNAME=stratmas.exe

#Debug handling, debug by default
!IFNDEF DEBUG
DEBUG=1
!ENDIF

# Whether to debug or not
!IF $(DEBUG) == 1
# /Zi full debug
# /MTd link with static, debugable and threaded runtime library
DEBUGFLAGS=/DDEBUG /Zi /MTd
CXXFLAGS=$(CXXFLAGS) $(DEBUGFLAGS)
LDFLAGS=$(LDFLAGS) $(DEBUGFLAGS) Xerces-c_static_2D.lib
#xerces-c_2D.lib
!ELSE	
# /Ox enable max optimization level.
# /Ot optimize for speed (at the cost of size).
# /MT link with static and threaded runtime library
OPTFLAGS=/Ox /Ot /MT
CXXFLAGS=$(CXXFLAGS) $(OPTFLAGS)
LDFLAGS=$(LDFLAGS) Xerces-c_static_2.lib
#xerces-c_2.lib
!ENDIF

# Default Libraries.
LIB=$(LIB);$(VCROOT)\PlatformSDK\Lib;$(XERCESCROOT)\lib;$(BOOSTROOT)\lib

all: $(SERVERNAME)

# Choose socket implementation
PLATFORMSRCS=WinSocket.cpp WinEventSink.cpp optionsWin.cpp

# Include static dependencies
!include Makefile.base
SERVEROBJS = $(SERVERSRCS:.cpp=.obj)

# Include derived dependencies
!IF EXIST(.depend)
!include .depend
!ENDIF

.cpp.obj:
	 $(CXX) $(CXXFLAGS) /c /Fo$@ $<

# Only remove .depend if we can regenerate it.
clean:
	del $(SERVERNAME) $(SERVERNAME)_* $(SERVEROBJS) *~ *.tmp \
	s_subst.exe s_subst.obj schemas\schemas.cpp schemas\schemas.h
!IF "$(CXX)" == "icl"
	del .depend
!ENDIF

test: $(SERVERNAME)
	$(SERVERNAME) -h localhost

dTest: $(SERVERNAME)
	$(SERVERNAME) -h localhost -d localhost

doc:
	@echo "Building of docs is not supported under Windows"

# Temporary until we get make depend working in windows:
MemEntityResolver.cpp: schemas/schemas.cpp schemas/schemas.h
schemas/schemas.cpp schemas/schemas.h: $(XMLSCHEMAS)
	nmake /NOLOGO /F Makefile.nmake file2h.exe
	cd schemas
	..\file2h.exe schemas.cpp schemas.h $(**F)
	cd ..

file2h.exe: file2h.c
	$(CC) $**

s_subst.exe: s_subst.c
	$(CC) $**

.depend: s_subst.exe schemas\schemas.h
	$(CXX) $(CXXFLAGS) /QMM $(SERVERSRCS) | s_subst "$(MAKEDIR)\\" > .depend

depend:
!IF "$(CXX)" == "icl"
	del .depend
	nmake /NOLOGO /F Makefile.nmake .depend
!ELSE
	@echo "Dependency generation only supported with ICL"
!ENDIF

$(SERVERNAME): $(SERVEROBJS)
	$(LD) /Fe$(SERVERNAME)  $(LDFLAGS) $(SERVEROBJS)
